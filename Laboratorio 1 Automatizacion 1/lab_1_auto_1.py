# -*- coding: utf-8 -*-
"""LAB 1 AUTO 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g4fpBfAlLZTRpfuSo8vXZGWw9CPgP15_

LAB 1 AUTOMATIZACION 1 MIGUEL ANGEL ARCILA PENAGOS, RAMON DURAN GOMEZ, PABLO OROZCO GUTIERREZ

a.Para definir una función en Python con la palabra clave def, escribe def, el nombre de la función, paréntesis (), y termina con dos puntos :. Luego, el bloque de código que constituye la función debe estar con sangría. el return resultado # Opcional: se usa para devolver un valor
"""

#pedimos los datos
n1=int(input("ingrese el primer numero"))
n2=int(input("ingrese el segundo numero"))
#definimos la funcion
def numeros(n1,n2):
  suma=n1+n2
  resta=n1-n2
  multiplicacion=n1*n2
  division=n1/n2
  #devolvemos los resultados de las operaciones con return
  return(suma,resta,multiplicacion,division)
  #imprimimos la funcion (definida desde arriba)
print(numeros(n1,n2))

"""b. Desarrolle una calculadora basica usando funciones, en la cual ingresen 2 numeros enteros y el tipo de operacion a crealizar en string. Como resultado la calculadora debe realizar la operacion deseada entre los dos numeros"""

def calculadora (num1, num2, operacion): #Defino la calculadora#

  if operacion == "+": ##Para hacer la suma##
    print("El resultado es: ",num1+num2)
  elif operacion == "-":##Para hacer la resta##
    print("El resultado es: ",num1-num2)
  elif operacion == "*":##Para multiplicar los numeros#
    print("El resultado es: ",num1*num2)
  elif operacion == "/":##Para dividir los numeros##
    print("El resultado es: ",num1/num2)
    if num2==0:
      print("No se puede hacer una division por cero")
  elif operacion== "%": ##Para entregar los residuos de la operacion##
    print("El resultado es: ",num1%num2)

num1= float(input("Ingrese el primer numero: "))
num2= float(input("Ingrese el segundo numero: "))
operacion= input("Ingrese la operacion a realizar(+, -, *, /, %): ")
calculadora(num1, num2, operacion) ##Llamamos la funcion para poder ejecutar los valores##

"""c. Desarrolle un algoritmo en el cual usted pueda definir el tamaño de una matriz cuadrada con un numero N, posteriormente le pida cada uno de los valores de la matriz con la indicación exacta de donde ira ubicado. Finalmente, el algoritmo debe retornar al usuario la matriz deseada y su transpuesta."""

import numpy as np #importo la libreria
n=int(input("defina el tamaño de la matrix"))
matriz1=np.zeros((n,n)) #defino la matriz
for i in range(0,np.shape(matriz1)[0]):# defino ciclo o a el n que ponga el usuario el [0] accede al primer numero de la columna
  for j in range(0,np.shape(matriz1)[1]):#defino ciclo o a el n que ponga el usuario [1 accede al segundo
        matriz1[i,j]=int(input("Ingrese número de la fila " + str(i+1)+" y la columna "+str(j+1)+": "))#[i,j] es para que acceda al pedazo de la matriz donde sus valores es i ,j el i+1

print("Su matriz es: ", matriz1)# muestra la matriz
print("La Transpuesta de su matriz es:",matriz1.T) #muestra la matriz transpuesta

"""d.. Desarrolle un algoritmo que reciba un mes y día especifico, y nos dé una aproximación para esa
fecha sobre la estación climática en la cual estamos.Considere los casos imposibles (30 de febrero, 31 de noviembre…entre otros…) para especificar el error o
ajustar la fecha.
"""

while True:
#Agregamos las variables de día y mes#
    mes = str(input("Ingrese el mes: ")).lower()
    dia = int(input("Ingrese el día: "))

#agregamos las restricciones. por ejemplo, que abril no puede tener 29 o que ningún mes tiene más de 31 días#
    if(dia>=32):
        print("La fecha que ingresas no es válida")
    elif((mes=="abril" and dia >= 29)):
        print("la fecha que ingresaste no es válida")
    elif(mes== "junio" and dia>=31):
        print("La fecha que ingresaste no es válida")
    elif(mes=="septiembre" and dia>=31):
        print("el mes que ingresaste no es válido")
    elif(mes=="noviembre" and dia>=31):
        print("El mes que ingresaste no es válido")


#para determinar la temporada por cada mes
    elif((mes=="enero") or (mes=="diciembre") or (mes=="febrero")):
        print("El día", dia, "del mes", mes, "estaremos en invierno" )
        break
    elif((mes=="septiembre") or (mes=="octubre") or (mes=="nomviembre")):
        print("El día", dia, "del mes", mes, "estaremos en otoño")
        break
    elif((mes=="junio") or (mes=="julio") or (mes=="agosto")):
        print("El día", dia, "del mes", mes, "estaremos en verano" )
        break
    elif((mes=="abril") or (mes=="mayo") or (mes=="marzo")):
        print("El día", dia, "del mes", mes, "estaremos en primavera")
        break
    else:
        print("la fecha que ingresaste no es válida")

"""e.. Desarrolle un algoritmo que sea capaz de sumar una matriz aleatoria con una matriz ingresada por el usuario."""

#importo la libreria numpy
import numpy as np
#para la matrix aleatoria
#defino variables (x) filas ,(y) columnas para que el usuario ingrese los valores
x=int(input("Ingrese el numero de filas: "))
y=int(input("Ingrese el numero de columnas: "))
#generamos la matrix aleatoria con el numero de filas y columas que diga el usuario con numeros interos matriz=np.ramdom.randint(rango menor, rango mayor, siz=(columnas, filas))
Matrix2=np.random.randint(1, 100, size=(x,y))
#imprimimos la matriz que se genera aleatoria
print("Matriz Aleatoria",Matrix2)
#definimos una matriz  que tenga x filas y y columnas
Matrix1=np.zeros((x,y))
#para la matrix de usuario
#agregamos un ciclo for para que pida el numero de filas  y columnas y los valores de la matrix que ingresa el usuario
for i in range(Matrix1.shape[0]):# da numero que tiene filas
  for j in range(Matrix1.shape[1]): #da numero que tiene columnas
    Matrix1[i,j]=int(input("Ingrese el numero: "))# ingresa los numeros de la matrix
print("Matriz del Usuario",Matrix1) #imprime la matrix del usuario
print("Suma de las Matrices",Matrix1+Matrix2) #imprime la suma de ambas matirces

"""f.Una empresa de comercio electrónico necesita un programa en Python que procese reseñas de
clientes.
El programa debe:
1. Pedir al usuario que ingrese varias reseñas de productos (mínimo 3).
2. Convertir todas las reseñas a minúsculas y eliminar signos de puntuación básicos (. , ! ?).
3. Guardar cada reseña en una lista.
4. Crear un diccionario de frecuencias que indique cuántas veces aparece cada palabra en
todas las reseñas combinadas.
5. Identificar y mostrar:
Las 3 palabras más frecuentes en las reseñas
"""

import string
i = 1
reseñasdeproductos=[]


while i<=10:
  reseña = input("Compártanos la reseña de su producto: ").lower()
  Quitarpuntos = str.maketrans('', '', string.punctuation)
  reseña_sin_puntuacion = reseña.translate(Quitarpuntos)
  reseñasdeproductos.append(reseña_sin_puntuacion)
  print(reseña_sin_puntuacion)
  i=i+1

print(reseñasdeproductos)

frecuencias={}
for reseña in reseñasdeproductos:
  for palabra in reseña.split():
    if palabra in frecuencias:
      frecuencias[palabra]+=1
    else:
      frecuencias[palabra]=1

print(frecuencias)

# Find the most frequent word
if frecuencias:
  # Sort the frequencies in descending order and get the top 3
  palabras_mas_repetidas = sorted(frecuencias.items(), key=lambda item: item[1], reverse=True)[:3]
  print("Las 3 palabras más repetidas son:")
  for palabra, frecuencia in palabras_mas_repetidas:
    print(f"- {palabra}: {frecuencia}")
else:
  print("No se ingresaron palabras para analizar.")